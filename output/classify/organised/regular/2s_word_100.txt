SVC output:
..
Warning: using -h 0 may be faster
*.
Warning: using -h 0 may be faster
*
optimization finished, #iter = 3142
obj = -433.386370, rho = -0.999533
nSV = 4804, nBSV = 4706
Total nSV = 4804
[LibSVM]

SVC Model:
SVC(C=0.1, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='linear',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.7286381842456608

Confusion matrix, without normalization:
[[1384  697]
 [ 116  799]]

Normalized confusion matrix:
[[0.67 0.33]
 [0.13 0.87]]

SVC output:
....
Warning: using -h 0 may be faster
*.
Warning: using -h 0 may be faster
*
optimization finished, #iter = 5642
obj = -3736.347179, rho = -0.999575
nSV = 3974, nBSV = 3731
Total nSV = 3974
[LibSVM]

SVC Model:
SVC(C=1, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='linear',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.7456608811748998

Confusion matrix, without normalization:
[[1365  627]
 [ 135  869]]

Normalized confusion matrix:
[[0.69 0.31]
 [0.13 0.87]]

SVC output:
..............
Warning: using -h 0 may be faster
*...
Warning: using -h 0 may be faster
*...
Warning: using -h 0 may be faster
*
optimization finished, #iter = 20827
obj = -36293.847206, rho = -0.999612
nSV = 3828, nBSV = 3478
Total nSV = 3828
[LibSVM]

SVC Model:
SVC(C=10, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='linear',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.7493324432576769

Confusion matrix, without normalization:
[[1372  623]
 [ 128  873]]

Normalized confusion matrix:
[[0.69 0.31]
 [0.13 0.87]]

SVC output:
............................................................................................
Warning: using -h 0 may be faster
*..............
Warning: using -h 0 may be faster
*...............................
Warning: using -h 0 may be faster
*..
Warning: using -h 0 may be faster
*
optimization finished, #iter = 138514
obj = -361778.847203, rho = -0.999642
nSV = 3850, nBSV = 3420
Total nSV = 3850
[LibSVM]

SVC Model:
SVC(C=100, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='linear',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.7463284379172229

Confusion matrix, without normalization:
[[1367  627]
 [ 133  869]]

Normalized confusion matrix:
[[0.69 0.31]
 [0.13 0.87]]

SVC output:

Warning: using -h 0 may be faster
*................................................................................................................................................................................................................
Warning: using -h 0 may be faster
*.....................................................................................................................................................................................................................................................................................................................................
Warning: using -h 0 may be faster
*...................................................................................................................................................................................
Warning: using -h 0 may be faster
*
optimization finished, #iter = 1372070
obj = -3616628.847207, rho = -0.999674
nSV = 3837, nBSV = 3426
Total nSV = 3837
[LibSVM]

SVC Model:
SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='linear',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.7483311081441922

Confusion matrix, without normalization:
[[1368  622]
 [ 132  874]]

Normalized confusion matrix:
[[0.69 0.31]
 [0.13 0.87]]

SVC output:

Warning: using -h 0 may be faster

Warning: using -h 0 may be faster
libsvm Solver reached max_iter
optimization finished, #iter = 10000000
obj = -35824172.242475, rho = -0.933852
nSV = 3829, nBSV = 3406
Total nSV = 3829
[LibSVM]

SVC Model:
SVC(C=10000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='linear',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.746995994659546

Confusion matrix, without normalization:
[[1366  624]
 [ 134  872]]

Normalized confusion matrix:
[[0.69 0.31]
 [0.13 0.87]]

SVC output:
...
Warning: using -h 0 may be faster
*
optimization finished, #iter = 3436
obj = -634.031180, rho = 2.473294
nSV = 6845, nBSV = 6840
Total nSV = 6845
[LibSVM]

SVC Model:
SVC(C=0.1, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='rbf',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.5707610146862483

Confusion matrix, without normalization:
[[1414 1200]
 [  86  296]]

Normalized confusion matrix:
[[0.54 0.46]
 [0.23 0.77]]

SVC output:
..
Warning: using -h 0 may be faster
*.
Warning: using -h 0 may be faster
*
optimization finished, #iter = 3158
obj = -5078.845786, rho = 9.663788
nSV = 5658, nBSV = 5603
Total nSV = 5658
[LibSVM]

SVC Model:
SVC(C=1, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='rbf',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.6905874499332443

Confusion matrix, without normalization:
[[1361  788]
 [ 139  708]]

Normalized confusion matrix:
[[0.63 0.37]
 [0.16 0.84]]

SVC output:
...
Warning: using -h 0 may be faster
*.
Warning: using -h 0 may be faster
*
optimization finished, #iter = 4975
obj = -40258.748720, rho = 14.890798
nSV = 4417, nBSV = 4277
Total nSV = 4417
[LibSVM]

SVC Model:
SVC(C=10, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='rbf',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.7339786381842457

Confusion matrix, without normalization:
[[1380  677]
 [ 120  819]]

Normalized confusion matrix:
[[0.67 0.33]
 [0.13 0.87]]

SVC output:
...............
Warning: using -h 0 may be faster
*................
Warning: using -h 0 may be faster
*.
Warning: using -h 0 may be faster
*
optimization finished, #iter = 31974
obj = -360750.880128, rho = 8.406883
nSV = 3897, nBSV = 3557
Total nSV = 3897
[LibSVM]

SVC Model:
SVC(C=100, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='rbf',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.7436582109479306

Confusion matrix, without normalization:
[[1362  630]
 [ 138  866]]

Normalized confusion matrix:
[[0.68 0.32]
 [0.14 0.86]]

SVC output:
...................................................................
Warning: using -h 0 may be faster
*...........................................
Warning: using -h 0 may be faster
*
optimization finished, #iter = 110242
obj = -3335629.332346, rho = 8.962639
nSV = 3837, nBSV = 3248
Total nSV = 3837
[LibSVM]

SVC Model:
SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='rbf',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.7433244325767691

Confusion matrix, without normalization:
[[1340  609]
 [ 160  887]]

Normalized confusion matrix:
[[0.69 0.31]
 [0.15 0.85]]

SVC output:
..................................................................................................................................................................................................................................................................................................
Warning: using -h 0 may be faster
*..........................................................................................................................................
Warning: using -h 0 may be faster
*....................................
Warning: using -h 0 may be faster
*
optimization finished, #iter = 464314
obj = -29747347.006009, rho = 9.597898
nSV = 3776, nBSV = 2828
Total nSV = 3776
[LibSVM]

SVC Model:
SVC(C=10000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='rbf',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.7349799732977303

Confusion matrix, without normalization:
[[1291  585]
 [ 209  911]]

Normalized confusion matrix:
[[0.69 0.31]
 [0.19 0.81]]

SVC output:
...
Warning: using -h 0 may be faster
*
optimization finished, #iter = 3500
obj = -699.975584, rho = -0.006939
nSV = 7000, nBSV = 7000
Total nSV = 7000
[LibSVM]

SVC Model:
SVC(C=0.1, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='poly',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.5003337783711616

Confusion matrix, without normalization:
[[1498 1495]
 [   2    1]]

Normalized confusion matrix:
[[0.5  0.5 ]
 [0.67 0.33]]

SVC output:
...
Warning: using -h 0 may be faster
*
optimization finished, #iter = 3500
obj = -6997.558410, rho = -0.069392
nSV = 7000, nBSV = 7000
Total nSV = 7000
[LibSVM]

SVC Model:
SVC(C=1, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='poly',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.5003337783711616

Confusion matrix, without normalization:
[[1498 1495]
 [   2    1]]

Normalized confusion matrix:
[[0.5  0.5 ]
 [0.67 0.33]]

SVC output:
...
Warning: using -h 0 may be faster
*
optimization finished, #iter = 3500
obj = -69755.841000, rho = -0.693920
nSV = 7000, nBSV = 7000
Total nSV = 7000
[LibSVM]

SVC Model:
SVC(C=10, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='poly',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.5003337783711616

Confusion matrix, without normalization:
[[1498 1495]
 [   2    1]]

Normalized confusion matrix:
[[0.5  0.5 ]
 [0.67 0.33]]

SVC output:
...
Warning: using -h 0 may be faster
*
optimization finished, #iter = 3523
obj = -681308.111630, rho = -0.952187
nSV = 6965, nBSV = 6946
Total nSV = 6965
[LibSVM]

SVC Model:
SVC(C=100, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='poly',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.5070093457943925

Confusion matrix, without normalization:
[[1491 1468]
 [   9   28]]

Normalized confusion matrix:
[[0.5  0.5 ]
 [0.24 0.76]]

SVC output:
...
Warning: using -h 0 may be faster
*
optimization finished, #iter = 3638
obj = -6156151.389869, rho = -0.957820
nSV = 6655, nBSV = 6538
Total nSV = 6655
[LibSVM]

SVC Model:
SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='poly',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.5704272363150867

Confusion matrix, without normalization:
[[1476 1263]
 [  24  233]]

Normalized confusion matrix:
[[0.54 0.46]
 [0.09 0.91]]

SVC output:
....
Warning: using -h 0 may be faster
*
optimization finished, #iter = 4597
obj = -49705309.492365, rho = -0.999790
nSV = 5772, nBSV = 5367
Total nSV = 5772
[LibSVM]

SVC Model:
SVC(C=10000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='poly',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.6582109479305741

Confusion matrix, without normalization:
[[1449  973]
 [  51  523]]

Normalized confusion matrix:
[[0.6  0.4 ]
 [0.09 0.91]]

