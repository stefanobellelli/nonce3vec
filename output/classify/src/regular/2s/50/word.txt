SVC output:
..
Warning: using -h 0 may be faster
*.
Warning: using -h 0 may be faster
*
optimization finished, #iter = 3261
obj = -493.517189, rho = -0.999601
nSV = 5204, nBSV = 5144
Total nSV = 5204
[LibSVM]

SVC Model:
SVC(C=0.1, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='linear',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.684913217623498

Confusion matrix, without normalization:
[[1280  724]
 [ 220  772]]

Normalized confusion matrix:
[[0.64 0.36]
 [0.22 0.78]]

SVC output:
...
Warning: using -h 0 may be faster
*.
Warning: using -h 0 may be faster
*
optimization finished, #iter = 4104
obj = -4642.928565, rho = -0.999586
nSV = 4739, nBSV = 4623
Total nSV = 4739
[LibSVM]

SVC Model:
SVC(C=1, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='linear',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.6842456608811749

Confusion matrix, without normalization:
[[1339  785]
 [ 161  711]]

Normalized confusion matrix:
[[0.63 0.37]
 [0.18 0.82]]

SVC output:
..................
Warning: using -h 0 may be faster
*....
Warning: using -h 0 may be faster
*..
Warning: using -h 0 may be faster
*
optimization finished, #iter = 23958
obj = -46026.749990, rho = -0.999628
nSV = 4691, nBSV = 4520
Total nSV = 4691
[LibSVM]

SVC Model:
SVC(C=10, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='linear',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.6862483311081442

Confusion matrix, without normalization:
[[1365  805]
 [ 135  691]]

Normalized confusion matrix:
[[0.63 0.37]
 [0.16 0.84]]

SVC output:
...............................................................................
Warning: using -h 0 may be faster
*.............
Warning: using -h 0 may be faster
*...................
Warning: using -h 0 may be faster
*.........................
Warning: using -h 0 may be faster
*
optimization finished, #iter = 136241
obj = -459846.749980, rho = -0.999560
nSV = 4696, nBSV = 4500
Total nSV = 4696
[LibSVM]

SVC Model:
SVC(C=100, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='linear',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.6852469959946595

Confusion matrix, without normalization:
[[1358  801]
 [ 142  695]]

Normalized confusion matrix:
[[0.63 0.37]
 [0.17 0.83]]

SVC output:

Warning: using -h 0 may be faster
*.........................................................................................................................................................................................
Warning: using -h 0 may be faster
*.......................................................................................................................................................................................................................................................................................................................
Warning: using -h 0 may be faster
*.....................................................................................................................................................................................................................
Warning: using -h 0 may be faster
*.
Warning: using -h 0 may be faster
*
optimization finished, #iter = 1350519
obj = -4598046.749983, rho = -0.999590
nSV = 4706, nBSV = 4479
Total nSV = 4706
[LibSVM]

SVC Model:
SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='linear',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.6915887850467289

Confusion matrix, without normalization:
[[1298  722]
 [ 202  774]]

Normalized confusion matrix:
[[0.64 0.36]
 [0.21 0.79]]

SVC output:

Warning: using -h 0 may be faster

Warning: using -h 0 may be faster
*........................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................WARN: libsvm Solver reached max_iter
optimization finished, #iter = 10000000
obj = -46291846.717988, rho = -0.973209
nSV = 4726, nBSV = 4474
Total nSV = 4726
[LibSVM]

SVC Model:
SVC(C=10000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='linear',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.6795727636849133

Confusion matrix, without normalization:
[[1365  825]
 [ 135  671]]

Normalized confusion matrix:
[[0.62 0.38]
 [0.17 0.83]]

SVC output:
...
Warning: using -h 0 may be faster
*
optimization finished, #iter = 3353
obj = -607.938568, rho = 2.772370
nSV = 6581, nBSV = 6563
Total nSV = 6581
[LibSVM]

SVC Model:
SVC(C=0.1, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='rbf',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.6011348464619493

Confusion matrix, without normalization:
[[1383 1078]
 [ 117  418]]

Normalized confusion matrix:
[[0.56 0.44]
 [0.22 0.78]]

SVC output:
..
Warning: using -h 0 may be faster
*.
Warning: using -h 0 may be faster
*.
Warning: using -h 0 may be faster
*
optimization finished, #iter = 3482
obj = -5141.690241, rho = 5.096941
nSV = 5496, nBSV = 5437
Total nSV = 5496
[LibSVM]

SVC Model:
SVC(C=1, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='rbf',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.6645527369826435

Confusion matrix, without normalization:
[[1348  853]
 [ 152  643]]

Normalized confusion matrix:
[[0.61 0.39]
 [0.19 0.81]]

SVC output:
....
Warning: using -h 0 may be faster
*.
Warning: using -h 0 may be faster
*
optimization finished, #iter = 5873
obj = -46273.137165, rho = 2.745859
nSV = 4820, nBSV = 4698
Total nSV = 4820
[LibSVM]

SVC Model:
SVC(C=10, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='rbf',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.6865821094793058

Confusion matrix, without normalization:
[[1261  700]
 [ 239  796]]

Normalized confusion matrix:
[[0.64 0.36]
 [0.23 0.77]]

SVC output:
.....................
Warning: using -h 0 may be faster
*............
Warning: using -h 0 may be faster
*...
Warning: using -h 0 may be faster
*
optimization finished, #iter = 36086
obj = -434553.653667, rho = 1.301500
nSV = 4612, nBSV = 4342
Total nSV = 4612
[LibSVM]

SVC Model:
SVC(C=100, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='rbf',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.6829105473965287

Confusion matrix, without normalization:
[[1236  686]
 [ 264  810]]

Normalized confusion matrix:
[[0.64 0.36]
 [0.25 0.75]]

SVC output:
.............................................................................................
Warning: using -h 0 may be faster
*....................................................................
Warning: using -h 0 may be faster
*.............................................
Warning: using -h 0 may be faster
*.
Warning: using -h 0 may be faster
*
optimization finished, #iter = 206796
obj = -4059066.830642, rho = 7.139623
nSV = 4532, nBSV = 3970
Total nSV = 4532
[LibSVM]

SVC Model:
SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='rbf',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.6769025367156208

Confusion matrix, without normalization:
[[1175  643]
 [ 325  853]]

Normalized confusion matrix:
[[0.65 0.35]
 [0.28 0.72]]

SVC output:
......................................................................................................................................................................................................................................................................................................................................................
Warning: using -h 0 may be faster
*..........................................................................................................................................................................................................................................................................................................
Warning: using -h 0 may be faster
*.........................................................................................................................
Warning: using -h 0 may be faster
*
optimization finished, #iter = 761469
obj = -38341903.599579, rho = 20.776270
nSV = 4463, nBSV = 3692
Total nSV = 4463
[LibSVM]

SVC Model:
SVC(C=10000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='rbf',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.6809078771695594

Confusion matrix, without normalization:
[[1155  611]
 [ 345  885]]

Normalized confusion matrix:
[[0.65 0.35]
 [0.28 0.72]]

SVC output:
...
Warning: using -h 0 may be faster
*
optimization finished, #iter = 3500
obj = -699.829655, rho = -0.049885
nSV = 7000, nBSV = 7000
Total nSV = 7000
[LibSVM]

SVC Model:
SVC(C=0.1, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='poly',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.5003337783711616

Confusion matrix, without normalization:
[[1498 1495]
 [   2    1]]

Normalized confusion matrix:
[[0.5  0.5 ]
 [0.67 0.33]]

SVC output:
...
Warning: using -h 0 may be faster
*
optimization finished, #iter = 3500
obj = -6982.965464, rho = -0.498852
nSV = 7000, nBSV = 7000
Total nSV = 7000
[LibSVM]

SVC Model:
SVC(C=1, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='poly',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.5003337783711616

Confusion matrix, without normalization:
[[1498 1495]
 [   2    1]]

Normalized confusion matrix:
[[0.5  0.5 ]
 [0.67 0.33]]

SVC output:
...
Warning: using -h 0 may be faster
*
optimization finished, #iter = 3511
obj = -68636.222062, rho = -0.966478
nSV = 6977, nBSV = 6967
Total nSV = 6977
[LibSVM]

SVC Model:
SVC(C=10, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='poly',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.5036715620827771

Confusion matrix, without normalization:
[[1491 1478]
 [   9   18]]

Normalized confusion matrix:
[[0.5  0.5 ]
 [0.33 0.67]]

SVC output:
...
Warning: using -h 0 may be faster
*
optimization finished, #iter = 3559
obj = -637529.327610, rho = -0.971546
nSV = 6731, nBSV = 6671
Total nSV = 6731
[LibSVM]

SVC Model:
SVC(C=100, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='poly',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.5550734312416555

Confusion matrix, without normalization:
[[1475 1308]
 [  25  188]]

Normalized confusion matrix:
[[0.53 0.47]
 [0.12 0.88]]

SVC output:
...
Warning: using -h 0 may be faster
*
optimization finished, #iter = 3929
obj = -5509281.079057, rho = -0.999763
nSV = 6009, nBSV = 5814
Total nSV = 6009
[LibSVM]

SVC Model:
SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='poly',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.6114819759679573

Confusion matrix, without normalization:
[[1456 1120]
 [  44  376]]

Normalized confusion matrix:
[[0.57 0.43]
 [0.1  0.9 ]]

SVC output:
......
Warning: using -h 0 may be faster
*..
Warning: using -h 0 may be faster
*
optimization finished, #iter = 8462
obj = -45954892.017627, rho = -0.999811
nSV = 5251, nBSV = 4748
Total nSV = 5251
[LibSVM]

SVC Model:
SVC(C=10000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma='auto', kernel='poly',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.6622162883845126

Confusion matrix, without normalization:
[[1353  865]
 [ 147  631]]

Normalized confusion matrix:
[[0.61 0.39]
 [0.19 0.81]]

