SVC output:
...
Warning: using -h 0 may be faster
*
optimization finished, #iter = 3500
obj = -699.336701, rho = -0.027351
nSV = 7000, nBSV = 7000
Total nSV = 7000
[LibSVM]

SVC Model:
SVC(C=0.1, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=2, gamma='auto', kernel='poly',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.5006675567423231

Confusion matrix, without normalization:
[[1498 1494]
 [   2    2]]

Normalized confusion matrix:
[[0.5 0.5]
 [0.5 0.5]]

SVC output:
...
Warning: using -h 0 may be faster
*
optimization finished, #iter = 3500
obj = -6933.670076, rho = -0.273512
nSV = 7000, nBSV = 7000
Total nSV = 7000
[LibSVM]

SVC Model:
SVC(C=1, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=2, gamma='auto', kernel='poly',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.5006675567423231

Confusion matrix, without normalization:
[[1498 1494]
 [   2    2]]

Normalized confusion matrix:
[[0.5 0.5]
 [0.5 0.5]]

SVC output:
...
Warning: using -h 0 may be faster
*
optimization finished, #iter = 3486
obj = -63527.219087, rho = -0.948483
nSV = 6954, nBSV = 6945
Total nSV = 6954
[LibSVM]

SVC Model:
SVC(C=10, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=2, gamma='auto', kernel='poly',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.530373831775701

Confusion matrix, without normalization:
[[1491 1398]
 [   9   98]]

Normalized confusion matrix:
[[0.52 0.48]
 [0.08 0.92]]

SVC output:
..
Warning: using -h 0 may be faster
*.*
optimization finished, #iter = 3001
obj = -376478.708945, rho = -0.998446
nSV = 5174, nBSV = 4967
Total nSV = 5174
[LibSVM]

SVC Model:
SVC(C=100, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=2, gamma='auto', kernel='poly',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.8287716955941254

Confusion matrix, without normalization:
[[1463  476]
 [  37 1020]]

Normalized confusion matrix:
[[0.75 0.25]
 [0.04 0.96]]

SVC output:
...
Warning: using -h 0 may be faster
*.
Warning: using -h 0 may be faster
*
optimization finished, #iter = 4495
obj = -1692998.505750, rho = -0.999936
nSV = 2562, nBSV = 2006
Total nSV = 2562
[LibSVM]

SVC Model:
SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=2, gamma='auto', kernel='poly',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.8998664886515354

Confusion matrix, without normalization:
[[1438  238]
 [  62 1258]]

Normalized confusion matrix:
[[0.86 0.14]
 [0.05 0.95]]

SVC output:
........
Warning: using -h 0 may be faster
*....
Warning: using -h 0 may be faster
*
optimization finished, #iter = 12099
obj = -9160127.737628, rho = -0.999933
nSV = 1705, nBSV = 890
Total nSV = 1705
[LibSVM]

SVC Model:
SVC(C=10000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=2, gamma='auto', kernel='poly',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.9185580774365821

Confusion matrix, without normalization:
[[1433  177]
 [  67 1319]]

Normalized confusion matrix:
[[0.89 0.11]
 [0.05 0.95]]

SVC output:
............
Warning: using -h 0 may be faster
*.....
Warning: using -h 0 may be faster
*
optimization finished, #iter = 17170
obj = -60927249.018411, rho = -0.999943
nSV = 1472, nBSV = 527
Total nSV = 1472
[LibSVM]

SVC Model:
SVC(C=100000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=2, gamma='auto', kernel='poly',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.9125500667556742

Confusion matrix, without normalization:
[[1403  165]
 [  97 1331]]

Normalized confusion matrix:
[[0.89 0.11]
 [0.07 0.93]]

SVC output:
..............................
Warning: using -h 0 may be faster
*..............
Warning: using -h 0 may be faster
*...
Warning: using -h 0 may be faster
*
optimization finished, #iter = 47112
obj = -538323989.542649, rho = -0.999947
nSV = 1405, nBSV = 462
Total nSV = 1405
[LibSVM]

SVC Model:
SVC(C=1000000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=2, gamma='auto', kernel='poly',
  max_iter=10000000, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=True)

Score: 0.9082109479305741

Confusion matrix, without normalization:
[[1398  173]
 [ 102 1323]]

Normalized confusion matrix:
[[0.89 0.11]
 [0.07 0.93]]

